# Generated by Django 5.2.2 on 2025-06-15 13:24

import api.models.event
import api.models.report
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('is_valid', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'events',
            },
        ),
        migrations.CreateModel(
            name='BoxEvent',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.event')),
                ('max_lat', models.FloatField(validators=[api.models.event.validate_latitude])),
                ('min_lat', models.FloatField(validators=[api.models.event.validate_latitude])),
                ('max_lon', models.FloatField(validators=[api.models.event.validate_longitude])),
                ('min_lon', models.FloatField(validators=[api.models.event.validate_longitude])),
            ],
            bases=('api.event',),
        ),
        migrations.CreateModel(
            name='GeoEvent',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.event')),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('area', models.CharField(blank=True, max_length=255, null=True)),
                ('subarea', models.CharField(blank=True, max_length=255, null=True)),
                ('subarea2', models.CharField(blank=True, max_length=255, null=True)),
            ],
            bases=('api.event',),
        ),
        migrations.CreateModel(
            name='RingEvent',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.event')),
                ('latitude', models.FloatField(validators=[api.models.event.validate_latitude])),
                ('longitude', models.FloatField(validators=[api.models.event.validate_longitude])),
                ('radius', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
            ],
            bases=('api.event',),
        ),
        migrations.CreateModel(
            name='EventGroup',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('events', models.ManyToManyField(db_table='_jt_eventgroup_events', related_name='event_groups', to='api.event')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('peril', models.CharField(max_length=100)),
                ('dr', models.FloatField(default=1.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('cron', models.CharField(blank=True, max_length=50, null=True, validators=[api.models.report.validate_cron])),
                ('cob', models.CharField(max_length=50, null=True)),
                ('loss_perspective', models.CharField(max_length=20)),
                ('is_apply_calibration', models.BooleanField(default=True)),
                ('is_apply_inflation', models.BooleanField(default=True)),
                ('is_tag_outwards_ptns', models.BooleanField(default=False)),
                ('is_location_breakout', models.BooleanField(default=False)),
                ('is_ignore_missing_lat_lon', models.BooleanField(default=True)),
                ('location_breakout_max_events', models.IntegerField(default=500000)),
                ('location_breakout_max_locations', models.IntegerField(default=1000000)),
                ('priority', models.CharField(default='AboveNormal', max_length=50)),
                ('ncores', models.IntegerField(default=24)),
                ('gross_node_id', models.IntegerField(null=True)),
                ('net_node_id', models.IntegerField(null=True)),
                ('rollup_context_id', models.IntegerField(null=True)),
                ('dynamic_ring_loss_threshold', models.IntegerField(default=5000000)),
                ('blast_radius', models.FloatField(default=50, null=True)),
                ('no_overlap_radius', models.FloatField(null=True)),
                ('is_valid', models.BooleanField(default=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('event_group', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.RESTRICT, related_name='reports', to='api.eventgroup')),
            ],
            options={
                'db_table': 'reports',
            },
        ),
        migrations.CreateModel(
            name='ReportModifier',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('as_at_date', models.DateField(null=True)),
                ('fx_date', models.DateField(null=True)),
                ('reports', models.ManyToManyField(blank=True, db_table='_jt_report_modifiers_reports', related_name='modifiers', to='api.report')),
            ],
            options={
                'db_table': 'report_modifiers',
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='api.report')),
                ('report_modifier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='api.reportmodifier')),
            ],
            options={
                'db_table': 'jobs',
            },
        ),
    ]
