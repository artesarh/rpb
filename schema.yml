openapi: 3.0.3
info:
  title: Reporting API
  version: 0.1.0
  description: API for the Reporting project
paths:
  /api/box-events/:
    get:
      operationId: box_events_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - box-events
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBoxEventList'
          description: ''
    post:
      operationId: box_events_create
      tags:
      - box-events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoxEventRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BoxEventRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BoxEventRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoxEvent'
          description: ''
  /api/box-events/{id}/:
    get:
      operationId: box_events_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this box event.
        required: true
      tags:
      - box-events
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoxEvent'
          description: ''
    put:
      operationId: box_events_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this box event.
        required: true
      tags:
      - box-events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoxEventRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BoxEventRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BoxEventRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoxEvent'
          description: ''
    patch:
      operationId: box_events_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this box event.
        required: true
      tags:
      - box-events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBoxEventRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBoxEventRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBoxEventRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoxEvent'
          description: ''
    delete:
      operationId: box_events_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this box event.
        required: true
      tags:
      - box-events
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/event-groups/:
    get:
      operationId: event_groups_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - event-groups
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventGroupList'
          description: ''
    post:
      operationId: event_groups_create
      tags:
      - event-groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventGroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventGroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventGroupRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventGroup'
          description: ''
  /api/event-groups/{id}/:
    get:
      operationId: event_groups_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event group.
        required: true
      tags:
      - event-groups
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventGroup'
          description: ''
    put:
      operationId: event_groups_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event group.
        required: true
      tags:
      - event-groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventGroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventGroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventGroupRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventGroup'
          description: ''
    patch:
      operationId: event_groups_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event group.
        required: true
      tags:
      - event-groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEventGroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEventGroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEventGroupRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventGroup'
          description: ''
    delete:
      operationId: event_groups_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event group.
        required: true
      tags:
      - event-groups
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/events/:
    get:
      operationId: events_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - events
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventList'
          description: ''
    post:
      operationId: events_create
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /api/events/{id}/:
    get:
      operationId: events_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    put:
      operationId: events_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    patch:
      operationId: events_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEventRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEventRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEventRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    delete:
      operationId: events_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/geo-events/:
    get:
      operationId: geo_events_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - geo-events
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGeoEventList'
          description: ''
    post:
      operationId: geo_events_create
      tags:
      - geo-events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeoEventRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GeoEventRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GeoEventRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoEvent'
          description: ''
  /api/geo-events/{id}/:
    get:
      operationId: geo_events_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this geo event.
        required: true
      tags:
      - geo-events
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoEvent'
          description: ''
    put:
      operationId: geo_events_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this geo event.
        required: true
      tags:
      - geo-events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeoEventRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GeoEventRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GeoEventRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoEvent'
          description: ''
    patch:
      operationId: geo_events_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this geo event.
        required: true
      tags:
      - geo-events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGeoEventRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGeoEventRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGeoEventRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoEvent'
          description: ''
    delete:
      operationId: geo_events_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this geo event.
        required: true
      tags:
      - geo-events
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/jobs/:
    get:
      operationId: jobs_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - jobs
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedJobList'
          description: ''
    post:
      operationId: jobs_create
      tags:
      - jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
  /api/jobs/{id}/:
    get:
      operationId: jobs_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this job.
        required: true
      tags:
      - jobs
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
    put:
      operationId: jobs_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this job.
        required: true
      tags:
      - jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
    patch:
      operationId: jobs_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this job.
        required: true
      tags:
      - jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedJobRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedJobRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedJobRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
    delete:
      operationId: jobs_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this job.
        required: true
      tags:
      - jobs
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/report-modifiers/:
    get:
      operationId: report_modifiers_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - report-modifiers
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReportModifierList'
          description: ''
    post:
      operationId: report_modifiers_create
      tags:
      - report-modifiers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportModifierRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReportModifierRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReportModifierRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportModifier'
          description: ''
  /api/report-modifiers/{id}/:
    get:
      operationId: report_modifiers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this report modifier.
        required: true
      tags:
      - report-modifiers
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportModifier'
          description: ''
    put:
      operationId: report_modifiers_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this report modifier.
        required: true
      tags:
      - report-modifiers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportModifierRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReportModifierRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReportModifierRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportModifier'
          description: ''
    patch:
      operationId: report_modifiers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this report modifier.
        required: true
      tags:
      - report-modifiers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReportModifierRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReportModifierRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReportModifierRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportModifier'
          description: ''
    delete:
      operationId: report_modifiers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this report modifier.
        required: true
      tags:
      - report-modifiers
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/reports/:
    get:
      operationId: reports_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - reports
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReportList'
          description: ''
    post:
      operationId: reports_create
      tags:
      - reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReportRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReportRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
  /api/reports/{id}/:
    get:
      operationId: reports_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this report.
        required: true
      tags:
      - reports
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
    put:
      operationId: reports_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this report.
        required: true
      tags:
      - reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReportRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReportRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
    patch:
      operationId: reports_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this report.
        required: true
      tags:
      - reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReportRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReportRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReportRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
    delete:
      operationId: reports_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this report.
        required: true
      tags:
      - reports
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/reports/{id}/events/:
    get:
      operationId: reports_events_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this report.
        required: true
      tags:
      - reports
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
  /api/reports/{id}/link-modifier/{modifier_id}/:
    get:
      operationId: reports_link_modifier_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this report.
        required: true
      - in: path
        name: modifier_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - reports
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
  /api/reports/{id}/modifier/{modifier_id}/:
    get:
      operationId: reports_modifier_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this report.
        required: true
      - in: path
        name: modifier_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - reports
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
  /api/reports/{id}/modifiers/:
    get:
      operationId: reports_modifiers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this report.
        required: true
      tags:
      - reports
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
  /api/ring-events/:
    get:
      operationId: ring_events_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - ring-events
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRingEventList'
          description: ''
    post:
      operationId: ring_events_create
      tags:
      - ring-events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RingEventRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RingEventRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RingEventRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RingEvent'
          description: ''
  /api/ring-events/{id}/:
    get:
      operationId: ring_events_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ring event.
        required: true
      tags:
      - ring-events
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RingEvent'
          description: ''
    put:
      operationId: ring_events_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ring event.
        required: true
      tags:
      - ring-events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RingEventRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RingEventRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RingEventRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RingEvent'
          description: ''
    patch:
      operationId: ring_events_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ring event.
        required: true
      tags:
      - ring-events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRingEventRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRingEventRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRingEventRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RingEvent'
          description: ''
    delete:
      operationId: ring_events_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ring event.
        required: true
      tags:
      - ring-events
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
components:
  schemas:
    BoxEvent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
          maxLength: 255
        is_valid:
          type: boolean
        max_lat:
          type: number
          format: double
        min_lat:
          type: number
          format: double
        max_lon:
          type: number
          format: double
        min_lon:
          type: number
          format: double
      required:
      - description
      - id
      - max_lat
      - max_lon
      - min_lat
      - min_lon
      - name
    BoxEventRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          minLength: 1
          maxLength: 255
        is_valid:
          type: boolean
        max_lat:
          type: number
          format: double
        min_lat:
          type: number
          format: double
        max_lon:
          type: number
          format: double
        min_lon:
          type: number
          format: double
      required:
      - description
      - max_lat
      - max_lon
      - min_lat
      - min_lon
      - name
    Event:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
          maxLength: 255
        is_valid:
          type: boolean
      required:
      - description
      - id
      - name
    EventGroup:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
          readOnly: true
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - events
      - id
      - name
      - updated
    EventGroupRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        event_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        created:
          type: string
          format: date-time
      required:
      - event_ids
      - name
    EventRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          minLength: 1
          maxLength: 255
        is_valid:
          type: boolean
      required:
      - description
      - name
    GeoEvent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
          maxLength: 255
        is_valid:
          type: boolean
        country:
          type: string
          nullable: true
          maxLength: 255
        area:
          type: string
          nullable: true
          maxLength: 255
        subarea:
          type: string
          nullable: true
          maxLength: 255
        subarea2:
          type: string
          nullable: true
          maxLength: 255
      required:
      - description
      - id
      - name
    GeoEventRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          minLength: 1
          maxLength: 255
        is_valid:
          type: boolean
        country:
          type: string
          nullable: true
          maxLength: 255
        area:
          type: string
          nullable: true
          maxLength: 255
        subarea:
          type: string
          nullable: true
          maxLength: 255
        subarea2:
          type: string
          nullable: true
          maxLength: 255
      required:
      - description
      - name
    Job:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        report:
          type: integer
        report_modifier:
          type: integer
          nullable: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - id
      - report
      - report_modifier
      - updated
    JobRequest:
      type: object
      properties:
        report:
          type: integer
        report_modifier:
          type: integer
          nullable: true
      required:
      - report
      - report_modifier
    PaginatedBoxEventList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BoxEvent'
    PaginatedEventGroupList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/EventGroup'
    PaginatedEventList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Event'
    PaginatedGeoEventList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/GeoEvent'
    PaginatedJobList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Job'
    PaginatedReportList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Report'
    PaginatedReportModifierList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ReportModifier'
    PaginatedRingEventList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/RingEvent'
    PatchedBoxEventRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          minLength: 1
          maxLength: 255
        is_valid:
          type: boolean
        max_lat:
          type: number
          format: double
        min_lat:
          type: number
          format: double
        max_lon:
          type: number
          format: double
        min_lon:
          type: number
          format: double
    PatchedEventGroupRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        event_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        created:
          type: string
          format: date-time
    PatchedEventRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          minLength: 1
          maxLength: 255
        is_valid:
          type: boolean
    PatchedGeoEventRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          minLength: 1
          maxLength: 255
        is_valid:
          type: boolean
        country:
          type: string
          nullable: true
          maxLength: 255
        area:
          type: string
          nullable: true
          maxLength: 255
        subarea:
          type: string
          nullable: true
          maxLength: 255
        subarea2:
          type: string
          nullable: true
          maxLength: 255
    PatchedJobRequest:
      type: object
      properties:
        report:
          type: integer
        report_modifier:
          type: integer
          nullable: true
    PatchedReportModifierRequest:
      type: object
      properties:
        as_at_date:
          type: string
          format: date
          nullable: true
        fx_date:
          type: string
          format: date
          nullable: true
    PatchedReportRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        peril:
          type: string
          minLength: 1
          maxLength: 100
        dr:
          type: number
          format: double
          maximum: 10.0
          minimum: 0.0
        event_group:
          type: integer
        cron:
          type: string
          nullable: true
          maxLength: 50
        cob:
          type: string
          nullable: true
          minLength: 1
          maxLength: 50
        loss_perspective:
          type: string
          minLength: 1
          maxLength: 20
        is_apply_calibration:
          type: boolean
        is_apply_inflation:
          type: boolean
        is_tag_outwards_ptns:
          type: boolean
        is_location_breakout:
          type: boolean
        is_ignore_missing_lat_lon:
          type: boolean
        location_breakout_max_events:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        location_breakout_max_locations:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        priority:
          type: string
          minLength: 1
          maxLength: 50
        ncores:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        gross_node_id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        net_node_id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        rollup_context_id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        dynamic_ring_loss_threshold:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        blast_radius:
          type: number
          format: double
          nullable: true
        no_overlap_radius:
          type: number
          format: double
          nullable: true
        is_valid:
          type: boolean
    PatchedRingEventRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          minLength: 1
          maxLength: 255
        is_valid:
          type: boolean
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        radius:
          type: number
          format: double
          minimum: 0
    Report:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        peril:
          type: string
          maxLength: 100
        dr:
          type: number
          format: double
          maximum: 10.0
          minimum: 0.0
        event_group:
          type: integer
        cron:
          type: string
          nullable: true
          maxLength: 50
        cob:
          type: string
          nullable: true
          maxLength: 50
        loss_perspective:
          type: string
          maxLength: 20
        is_apply_calibration:
          type: boolean
        is_apply_inflation:
          type: boolean
        is_tag_outwards_ptns:
          type: boolean
        is_location_breakout:
          type: boolean
        is_ignore_missing_lat_lon:
          type: boolean
        location_breakout_max_events:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        location_breakout_max_locations:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        priority:
          type: string
          maxLength: 50
        ncores:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        gross_node_id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        net_node_id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        rollup_context_id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        dynamic_ring_loss_threshold:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        blast_radius:
          type: number
          format: double
          nullable: true
        no_overlap_radius:
          type: number
          format: double
          nullable: true
        is_valid:
          type: boolean
        modifiers:
          type: array
          items:
            $ref: '#/components/schemas/ReportModifier'
          readOnly: true
      required:
      - cron
      - event_group
      - id
      - loss_perspective
      - modifiers
      - name
      - peril
    ReportModifier:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        as_at_date:
          type: string
          format: date
          nullable: true
        fx_date:
          type: string
          format: date
          nullable: true
        quarter:
          type: string
          readOnly: true
        year:
          type: string
          readOnly: true
        month:
          type: string
          readOnly: true
        day:
          type: string
          readOnly: true
      required:
      - day
      - id
      - month
      - quarter
      - year
    ReportModifierRequest:
      type: object
      properties:
        as_at_date:
          type: string
          format: date
          nullable: true
        fx_date:
          type: string
          format: date
          nullable: true
    ReportRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        peril:
          type: string
          minLength: 1
          maxLength: 100
        dr:
          type: number
          format: double
          maximum: 10.0
          minimum: 0.0
        event_group:
          type: integer
        cron:
          type: string
          nullable: true
          maxLength: 50
        cob:
          type: string
          nullable: true
          minLength: 1
          maxLength: 50
        loss_perspective:
          type: string
          minLength: 1
          maxLength: 20
        is_apply_calibration:
          type: boolean
        is_apply_inflation:
          type: boolean
        is_tag_outwards_ptns:
          type: boolean
        is_location_breakout:
          type: boolean
        is_ignore_missing_lat_lon:
          type: boolean
        location_breakout_max_events:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        location_breakout_max_locations:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        priority:
          type: string
          minLength: 1
          maxLength: 50
        ncores:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        gross_node_id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        net_node_id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        rollup_context_id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        dynamic_ring_loss_threshold:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        blast_radius:
          type: number
          format: double
          nullable: true
        no_overlap_radius:
          type: number
          format: double
          nullable: true
        is_valid:
          type: boolean
      required:
      - cron
      - event_group
      - loss_perspective
      - name
      - peril
    RingEvent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
          maxLength: 255
        is_valid:
          type: boolean
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        radius:
          type: number
          format: double
          minimum: 0
      required:
      - description
      - id
      - latitude
      - longitude
      - name
      - radius
    RingEventRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          minLength: 1
          maxLength: 255
        is_valid:
          type: boolean
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        radius:
          type: number
          format: double
          minimum: 0
      required:
      - description
      - latitude
      - longitude
      - name
      - radius
    TokenObtainPair:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - refresh
    TokenObtainPairRequest:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - password
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
      required:
      - access
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - refresh
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
